#!/bin/bash
#
# Execute: spy
#
# ==============================================
#                  Variables
# ==============================================
spy="/data/data/com.termux/files/home/cyberspy"
settings="/data/data/com.termux/files/home/cyberspy/settings"
style="/data/data/com.termux/files/home/cyberspy/settings/style"
execute="/data/data/com.termux/files/home/cyberspy/settings/exec"
intools="/data/data/com.termux/files/home/cyberspy/settings/intools"
rmtools="/data/data/com.termux/files/home/cyberspy/settings/rmtools"
home="/data/data/com.termux/files/home"
usr="/data/data/com.termux/files/usr"
etc="/data/data/com.termux/files/usr/etc"
bin="/data/data/com.termux/files/usr/bin"
opt="/data/data/com.termux/files/usr/opt"
share="/data/data/com.termux/files/usr/share"
argument=$1
option=$2
# ==============================================
#                  Light colors
# ==============================================
black="\e[1;30m"
blue="\e[1;34m"
green="\e[1;32m"
cyan="\e[1;36m"
red="\e[1;31m"
purple="\e[1;35m"
yellow="\e[1;33m"
white="\e[1;37m"
# ==============================================
#                  Dark colors
# ==============================================
blackDark="\e[0;30m"
blueDark="\e[0;34m"
greenDark="\e[0;32m"
cyanDark="\e[0;36m"
redDark="\e[0;31m"
purpleDark="\e[0;35m"
yellowDark="\e[0;33m"
whiteDark="\e[0;37m"
# ==============================================
#               Background colors
# ==============================================
blackBack=$(setterm -background black)
blueBack=$(setterm -background blue)
greenBack=$(setterm -background green)
cyanBack=$(setterm -background cyan)
redBack=$(setterm -background red)
yellowBack=$(setterm -background yellow)
whiteBack=$(setterm -background white)
# ==============================================
#            Specifying arguments
# ==============================================
if [[ "${argument}" == "style" ]]; then
    if [[ "${option}" == "small" ]]; then
	cp ${style}/spy.small.txt ${style}/spy.txt
	cat ${style}/spy.txt
    elif [[ "${option}" == "medium" ]]; then
	cp ${style}/spy.medium.txt ${style}/spy.txt
	cat ${style}/spy.txt
    elif [[ "${option}" == "large" ]]; then
	cp ${style}/spy.large.txt ${style}/spy.txt
	cat ${style}/spy.txt
    else
	echo -e "${red}[${yellow}!${red}] Invalid Option"${white}
    fi
elif [[ "${argument}" == "install" ]]; then
    if [[ "${option}" == "ncshare" ]]; then
	source ${intools}/ncshare.sh
    elif [[ "${option}" == "sherlock" ]]; then
	source ${intools}/sherlock.sh
    elif [[ "${option}" == "seeker" ]]; then
	source ${intools}/seeker.sh
    elif [[ "${option}" == "metasploit" ]]; then
	source ${intools}/metasploit.sh
    elif [[ "${option}" == "facebash" ]]; then
	source ${intools}/facebash.sh
    elif [[ "${option}" == "wortex" ]]; then
	source ${intools}/wortex.sh
    elif [[ "${option}" == "iphunter" ]]; then
	source ${intools}/iphunter.sh
    else
	echo -e "${red}[${yellow}!${red}] Invalid Option"${white}
    fi
elif [[ "${argument}" == "remove" ]]; then
    if [[ "${option}" == "ncshare" ]]; then
	source ${rmtools}/ncshare.sh
    elif [[ "${option}" == "sherlock" ]]; then
	source ${rmtools}/sherlock.sh
    elif [[ "${option}" == "seeker" ]]; then
	source ${rmtools}/seeker.sh
    elif [[ "${option}" == "metasploit" ]]; then
	source ${rmtools}/metasploit.sh
    elif [[ "${option}" == "facebash" ]]; then
	source ${rmtools}/facebash.sh
    elif [[ "${option}" == "wortex" ]]; then
	source ${rmtools}/wortex.sh
    elif [[ "${option}" == "iphunter" ]]; then
	source ${rmtools}/iphunter.sh
    else
	echo -e "${red}[${yellow}!${red}] Invalid Option"${white}
    fi
elif [[ "${argument}" == "update" ]]; then
    echo -e ${red}"
[${green}*${red}] ${green}Updating CyberSpy..."${white}
    rm -rf ${spy}
    git clone https://github.com/Darkmux/cyberspy ${spy}
    cd ${spy}
    chmod 777 *.sh
    bash update.sh
    echo -e ${red}"[${green}√${red}] ${green}CyberSpy Updated"${white}
elif [[ "${argument}" == "uninstall" ]]; then
    source ${spy}/uninstall.sh
    echo -e ${red}"[${green}√${red}] ${green}CyberSpy Uninstalled"${white}
elif [[ "${argument}" == "help" ]]; then
    echo -e ${red}"
                   [${green}√${red}] ${green}CyberSpy Help${red}[${green}√${red}]${white}
spy ${green}<${white}arguments${green}> <${white}options${green}>

Arguments Available:

$ ${white}spy help${red}

[${green}*${red}] ${yellow}Shows a help menu on the use of cyberspy in the terminal.${green}

$ ${white}spy list ${green}<${white}tools${green}|${white}banners${green}>${red}

[${green}*${red}] ${yellow}Shows the list of tools or banners available to use and install.${green}

$ ${white}spy update${red}

[${green}*${red}] ${yellow}Find and update CyberSpy to its latest version. (Run it whenever they enter the terminal).${green}

$ ${white}spy uninstall${red}

[${green}*${red}] ${yellow}Completely uninstall CyberSpy and go back to the default Termux (only use it if you don't like cyberspy).${green}

$ ${white}spy style ${green}<${white}banner${green}>${red}

[${green}*${red}] ${yellow}Changes the size of the banner depending on the specified argument. (It is recommended to adapt it to your font size in Termux).${green}

$ ${white}spy install ${green}<${white}tool${green}>${red}

[${green}*${red}] ${yellow}Installs the tool specified as an argument.${green}

$ ${white}spy remove ${green}<${white}tool${green}>${red}

[${green}*${red}] ${yellow}Removes the tool specified as an argument.${white}
"
elif [[ "${argument}" == "list" ]]; then
    if [[ "${option}" == "tools" ]]; then
	names=$(ls ${execute})
	echo "${names}" >> ${settings}/names.txt
	num=$(cat ${settings}/names.txt | wc -l)
	for (( i=0; i<${num}; i++ ))
	do
	    nameTool=$(awk "NR ==${i}" ${settings}/names.txt)
	    echo -e ${red}"[${green}√${red}] ${green}${nameTool}"
	    sleep 0.1
	done
    elif [[ "${option}" == "banners" ]]; then
    else
	echo -e "${red}[${yellow}!${red}] Invalid Option"${white}
    fi
else
    echo -e "${red}[${yello}!${red}] Invalid Argument"${white}
fi
